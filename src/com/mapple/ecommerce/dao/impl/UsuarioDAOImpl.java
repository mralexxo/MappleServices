package com.mapple.ecommerce.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.mapple.ecommerce.dao.UsuarioDAO;
import com.mapple.ecommerce.dao.util.JDBCUtils;
import com.mapple.ecommerce.exceptions.DataException;
import com.mapple.ecommerce.exceptions.DuplicateInstanceException;
import com.mapple.ecommerce.exceptions.InstanceNotFoundException;
import com.mapple.ecommerce.model.Usuario;



public class UsuarioDAOImpl implements UsuarioDAO {

	public UsuarioDAOImpl() {
		
	}
	
	@Override
	public Boolean exists(Connection connection, String correoUsuario) 
			throws DataException {
		
		boolean exist = false;

		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;

		try {

			String queryString = 
							"SELECT u.correoUsuario, u.nombre, u.apellidos, u.telefono, u.clave, u.codDireccion " + 
							"FROM Usuario u  " +
							"WHERE u.correoUsuario = ?";


			preparedStatement = connection.prepareStatement(queryString);

			int i = 1;
			preparedStatement.setString(i++, correoUsuario);

			resultSet = preparedStatement.executeQuery();

			if (resultSet.next()) {
				exist = true;
			}

		} catch (SQLException e) {
			throw new DataException(e);
		} finally {
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);
		}

		return exist;
	}

	@Override
	public Usuario create(Connection connection, Usuario u) 
			throws DuplicateInstanceException, DataException {

		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		try {          

			if (exists(connection, u.getCorreoUsuario())) {
				throw new DuplicateInstanceException(u.getApellidos(), Usuario.class.getName());
			}
			
			
			String queryString = "INSERT INTO Usuario(correoUsuario, nombre, apellidos, telefono, clave, codDireccion)"
					+ "VALUES (?, ?, ?, ?, ?, ?)";

			preparedStatement = connection.prepareStatement(queryString /*, Statement.RETURN_GENERATED_KEYS*/);

			int i = 1;             
			preparedStatement.setString(i++, u.getCorreoUsuario());
			preparedStatement.setString(i++, u.getNombre());
			preparedStatement.setString(i++, u.getApellidos());
			preparedStatement.setInt(i++, u.getTelefono());
			preparedStatement.setString(i++, u.getClave());
			preparedStatement.setInt(i++, u.getCodDireccion());


			int insertedRows = preparedStatement.executeUpdate();

			if (insertedRows == 0) {
				throw new SQLException("Can not add row to table 'Usuario'");
			} 

			resultSet = preparedStatement.getGeneratedKeys();
//			if (resultSet.next()) {
//				String pk = resultSet.getString(1); 
//				u.setCorreoUsuario(pk);
//			} else {
//				throw new DataException("Unable to fetch autogenerated primary key");
//			}

			return u;

		} catch (SQLException e) {
			throw new DataException(e);
		} finally {
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);
		}
	}

	@Override
	public void update(Connection connection, Usuario u) 
			throws InstanceNotFoundException, DataException {
		PreparedStatement preparedStatement = null;
		
		try {

			String queryString = 
					"UPDATE Usuario " +
					"SET correoUsuario = ? ,  nombre = ?, apellidos = ?, telefono = ? , clave = ?, codDireccion = ? " +
					"WHERE correoUsuario = ? ";

			preparedStatement = connection.prepareStatement(queryString);

			int i = 1;
			preparedStatement.setString(i++, u.getCorreoUsuario());
			preparedStatement.setString(i++, u.getNombre());
			preparedStatement.setString(i++, u.getApellidos());
			preparedStatement.setInt(i++, u.getTelefono());
			preparedStatement.setString(i++, u.getClave());
			preparedStatement.setInt(i++, u.getCodDireccion());

			int updatedRows = preparedStatement.executeUpdate();

			if (updatedRows == 0) {
				throw new InstanceNotFoundException(u.getCorreoUsuario(), Usuario.class.getName());
			}

			if (updatedRows > 1) {
				throw new SQLException("Duplicate row for id = '" + 
						u.getCorreoUsuario() + "' in table 'Usuario'");
			}                          

		} catch (SQLException e) {
			throw new DataException(e);    
		} finally {
			JDBCUtils.closeStatement(preparedStatement);
		}              		
	}


	private Usuario loadNext(Connection connection, ResultSet resultSet) 
			throws SQLException, DataException {
		
		
		int i = 1;
		String correoUsuario = resultSet.getString(i++);	                
		String nombre = resultSet.getString(i++);	                
		String apellidos = resultSet.getString(i++);
		Integer telefono = resultSet.getInt(i++);	
		String clave = resultSet.getString(i++);	
		Integer codDireccion = resultSet.getInt(i++);	

		
		Usuario e = new Usuario();		
		e.setCorreoUsuario(correoUsuario);
		e.setNombre(nombre);
		e.setApellidos(apellidos);
		e.setTelefono(telefono);
		e.setClave(clave);
		e.setCodDireccion(codDireccion);

		return e;
	}
	
}